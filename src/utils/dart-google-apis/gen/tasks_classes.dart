{Task: {id: Task, type: object, properties: {completed: {type: string, description: Completion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed., format: date-time}, deleted: {type: boolean, description: Flag indicating whether the task has been deleted. The default if False.}, due: {type: string, description: Due date of the task (as a RFC 3339 timestamp). Optional., format: date-time}, etag: {type: string, description: ETag of the resource.}, hidden: {type: boolean, description: Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.}, id: {type: string, description: Task identifier.}, kind: {type: string, description: Type of the resource. This is always "tasks#task"., default: tasks#task}, links: {type: array, description: Collection of links. This collection is read-only., items: {type: object, properties: {description: {type: string, description: The description. In HTML speak: Everything between <a> and </a>.}, link: {type: string, description: The URL.}, type: {type: string, description: Type of the link, e.g. "email".}}}}, notes: {type: string, description: Notes describing the task. Optional.}, parent: {type: string, description: Parent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the "move" method to move the task under a different parent or to the top level.}, position: {type: string, description: String indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task's corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the "move" method to move the task to another position.}, selfLink: {type: string, description: URL pointing to this task. Used to retrieve, update, or delete this task.}, status: {type: string, description: Status of the task. This is either "needsAction" or "completed".}, title: {type: string, description: Title of the task.}, updated: {type: string, description: Last modification time of the task (as a RFC 3339 timestamp)., format: date-time}}}, TaskList: {id: TaskList, type: object, properties: {etag: {type: string, description: ETag of the resource.}, id: {type: string, description: Task list identifier.}, kind: {type: string, description: Type of the resource. This is always "tasks#taskList"., default: tasks#taskList}, selfLink: {type: string, description: URL pointing to this task list. Used to retrieve, update, or delete this task list.}, title: {type: string, description: Title of the task list.}, updated: {type: string, description: Last modification time of the task list (as a RFC 3339 timestamp)., format: date-time}}}, TaskLists: {id: TaskLists, type: object, properties: {etag: {type: string, description: ETag of the resource.}, items: {type: array, description: Collection of task lists., items: {$ref: TaskList}}, kind: {type: string, description: Type of the resource. This is always "tasks#taskLists"., default: tasks#taskLists}, nextPageToken: {type: string, description: Token that can be used to request the next page of this result.}}}, Tasks: {id: Tasks, type: object, properties: {etag: {type: string, description: ETag of the resource.}, items: {type: array, description: Collection of tasks., items: {$ref: Task}}, kind: {type: string, description: Type of the resource. This is always "tasks#tasks"., default: tasks#tasks}, nextPageToken: {type: string, description: Token used to access the next page of this result.}}}}